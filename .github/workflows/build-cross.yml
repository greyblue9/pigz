name: Cross-Build C/C++

on:
  push:
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install build dependencies
      run: |
         {
           echo "/Td6WFoAAATm1rRGAgAhARwAAAAQz1jM4AVhAQ1dADIZSGeKcsSYOckEkLGG7X3KZNsn7w6Yhnoi"
           echo "a+RB75NiY94JiNTxSxzWl8YxN+Wi68mP2EoYexi6Khw9ULVvjegSLbnB3nF4DMgwCq+gSop3wDTb"
           echo "dWaSR0Jpu4NHFUoYyccQrRvoYtOEn+xlddf7cIKqcRojWFUpYE8F/vpGdRMxYdHUPbwyKxJO1TQ9"
           echo "BWVJ/PLvqo4k2wx3p4Vh8KCdFU2Tm42jDK76PIObQ3Nq+CbXSioR2psVHJJKQEEKjKUXtw3yjl3s"
           echo "4g58Un6G0o0e3pt3iMsQV2yBW6bLgP5+qPG+hLiXqId6thhqND4ZoiTuJK00BcQjv9ZBPge4c7lA"
           echo "R9ITp05FqwQYf+hRUSm+AAAAAPTt7Zpy9VaSAAGpAuIKAAD+y2f2scRn+wIAAAAABFla"
         } \
           | base64 -d \
           | xz -dc \
           | sudo tee -a /etc/apt/sources.list \
           ;
    - name: More deps
      run: |
           sudo apt install -y -y --no-install-recommends aptitude
           sudo dpkg --add-architecture arm64 || sudo dpkg --force-architecture arm64
           sudo aptitude update --allow-untrusted 
           sudo apttitude install -y -y --install-recommends --clean-on-startup --allow-new-upgrades --allow-new-installs \
           \
           remake libc6-dev libdbus-1-dev libelf-dev \
           libffi-dev libgmp-dev libicu-dev libisl-dev \
           libjpeg-dev libjson11-1-dev libltdl-dev  \
           liblz4-dev liblzma-dev libmpc-dev libmpfr-dev  \
           libssl-dev libtasn1-6-dev libxml2-dev \
           \
           gcc gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu \
           \
           libc6-dev-arm64-cross \
           zlib1g-dev
           ;
    - name: Autogenerate
      run: |
           autogen="$( find "$PWD" -type f -a "(" -iname "autogen*.sh" -o -iname "bootstrap*.sh" ")" | head -1 )"
           if [ -n "$autogen" ]; then
             autogen_fn="${autogen##*/}"
             autogen_dir="${autogen: 0:${#autogen}-${#autogen_fn}}"
             autogen_dir="${autogen_dir%%/}"
             if [ -d "$autogen_dir" ]; then
               chmod 0755 "$autogen"
               cd "$autogen_dir" && bash "./$autogen_fn"
             else true
             fi
           else
             [ -e configure.ac -o -e Makefile.am ] \
               && apt install -y -y --no-install-recommends \
                  m4 autoconf automake libtool || true
             [ -e configure.ac -o -e Makefile.am ] \
               && autoreconf -fiv || true
           fi
    - name: Configure build
      run: |
           set -- PREFIX=/usr \
           CROSS_COMPILE=aarch64-linux-gnu- \
           CROSS=aarch64-linux-gnu- \
           CROSS_TOOLS=aarch64-linux-gnu- \
           CROSSCOMPILE=aarch64-linux-gnu- \
           cross_compile=aarch64-linux-gnu- \
           BUILD_CC=aarch64-linux-gnu-gcc \
           BUILD_CXX=aarch64-linux-gnu-g++ \
           BUILD_BINUTILS=aarch64-linux-gnu- \
           CC=aarch64-linux-gnu-gcc \
           CXX=aarch64-linux-gnu-g++ \
           AR=aarch64-linux-gnu-gcc-ar \
           GCC_AR=aarch64-linux-gnu-gcc-ar \
           LD=aarch64-linux-gnu-ld \
           NM=aarch64-linux-gnu-nm \
           BINUTILS=aarch64-linux-gnu- \
           CROSS_COMPILING=t \
           cross_compiling=t \
           V=1 VERBOSE=1 VERBOSE_MAKEFILE=1 \
           ;
           if [ -e configure ]; then
             chmod 755 configure
             env "$@" bash ./configure --prefix=/usr "$@"
           else
             true
           fi
    - name: Build with make
      run: |
           set -- PREFIX=/usr \
           CROSS_COMPILE=aarch64-linux-gnu- \
           CROSS=aarch64-linux-gnu- \
           CROSS_TOOLS=aarch64-linux-gnu- \
           CROSSCOMPILE=aarch64-linux-gnu- \
           cross_compile=aarch64-linux-gnu- \
           BUILD_CC=aarch64-linux-gnu-gcc \
           BUILD_CXX=aarch64-linux-gnu-g++ \
           BUILD_BINUTILS=aarch64-linux-gnu- \
           CC=aarch64-linux-gnu-gcc \
           CXX=aarch64-linux-gnu-g++ \
           AR=aarch64-linux-gnu-gcc-ar \
           GCC_AR=aarch64-linux-gnu-gcc-ar \
           LD=aarch64-linux-gnu-ld \
           NM=aarch64-linux-gnu-nm \
           BINUTILS=aarch64-linux-gnu- \
           "CFLAGS=-O1 -ggdb3 -gdwarf-4 -ffunction-sections -fdata-sections -frecord-gcc-switches -grecord-gcc-switches" \
           "CXXFLAGS=-O1 -ggdb3 -gdwarf-4 -ffunction-sections -fdata-sections -frecord-gcc-switches -grecord-gcc-switches" \
           CROSS_COMPILING=t \
           cross_compiling=t \
           V=1 VERBOSE=1 VERBOSE_MAKEFILE=1 \
           ;
           DESTDIR="$PWD/out/aarch64-linux-gnu"
           mkdir -p "$DESTDIR"
           set -- "$@" "DESTDIR=$DESTDIR" \
           ;
           env "$@" remake --trace -e "$@"
           env "$@" remake --trace -e install "$@"


